{"version":3,"sources":["../src/dependencies.js"],"names":["jwt","require","verifyToken","req","res","next","headers","token","status","json","verify","process","env","MY_SECRET","err","decoded","userId","id","console","log","storage","multer","diskStorage","destination","file","cb","filename","Date","now","originalname","fileFilter","mimetype","upload","module","exports"],"mappings":";;AAAA;;;;;;;;AAEA;AACA,IAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB,C,CACA;;;AACA,IAAMC,WAAW;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACXF,GAAG,CAACG,OAAJ,CAAYC,KADD;AAAA;AAAA;AAAA;;AAAA,6CAELH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,yBAAW,KAAb;AAAoB,uBAAS;AAA7B,aAArB,CAFK;;AAAA;AAIVF,YAAAA,KAJU,GAIFJ,GAAG,CAACG,OAAJ,CAAYC,KAJV;;AAAA,kBAKZA,KAAK,KAAK,MALE;AAAA;AAAA;AAAA;;AAAA,6CAMLH,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,wBAAU,aAAZ;AAA2B,uBAAS;AAApC,aAArB,CANK;;AAAA;AAQhBT,YAAAA,GAAG,CAACU,MAAJ,CAAWH,KAAX,EAAkBI,OAAO,CAACC,GAAR,CAAYC,SAA9B,EAAyC,UAACC,GAAD,EAAMC,OAAN,EAAkB;AACvD,kBAAID,GAAJ,EAAS;AACL,uBAAOV,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAE,4BAAU,aAAZ;AAA2B,2BAAS;AAApC,iBAArB,CAAP;AACH;;AACDN,cAAAA,GAAG,CAACa,MAAJ,GAAaD,OAAO,CAACE,EAArB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYhB,GAAG,CAACa,MAAhB;AACH,aAND;AAOAX,YAAAA,IAAI;;AAfY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXH,WAAW;AAAA;AAAA;AAAA,GAAjB,C,CAkBA;;;AACA,IAAMkB,OAAO,GAAGC,mBAAOC,WAAP,CAAmB;AAC/BC,EAAAA,WAAW,EAAE,qBAACpB,GAAD,EAAMqB,IAAN,EAAYC,EAAZ,EAAmB;AAC5BA,IAAAA,EAAE,CAAC,IAAD,EAAO,QAAP,CAAF;AACH,GAH8B;AAI/BC,EAAAA,QAAQ,EAAE,kBAACvB,GAAD,EAAMqB,IAAN,EAAYC,EAAZ,EAAmB;AACzBA,IAAAA,EAAE,CAAC,IAAD,YAAUE,IAAI,CAACC,GAAL,EAAV,cAAwBJ,IAAI,CAACK,YAA7B,EAAF;AACH;AAN8B,CAAnB,CAAhB;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAC3B,GAAD,EAAMqB,IAAN,EAAYC,EAAZ,EAAmB;AAClC,MAAID,IAAI,CAACO,QAAL,IAAiB,YAAjB,IAAiCP,IAAI,CAACO,QAAL,IAAiB,WAAlD,IAAiEP,IAAI,CAACO,QAAL,IAAiB,YAAlF,IAAkGP,IAAI,CAACO,QAAL,IAAiB,YAAnH,IAAmIP,IAAI,CAACO,QAAL,IAAiB,iBAAxJ,EAA2K;AACvKN,IAAAA,EAAE,CAAC,IAAD,EAAO,IAAP,CAAF;AACH,GAFD,MAEO;AACHA,IAAAA,EAAE,CAAC,IAAD,EAAO,KAAP,CAAF;AACH;AACJ,CAND;;AAOA,IAAMO,MAAM,GAAG,wBAAO;AAAEZ,EAAAA,OAAO,EAAEA,OAAX;AAAoBU,EAAAA,UAAU,EAAEA;AAAhC,CAAP,CAAf;AAEAG,MAAM,CAACC,OAAP,GAAiB;AAAChC,EAAAA,WAAW,EAAXA,WAAD;AAAc8B,EAAAA,MAAM,EAANA;AAAd,CAAjB","sourcesContent":["import multer from 'multer';\r\n\r\n// middlewares\r\nconst jwt = require('jsonwebtoken');\r\n// import 'dotenv/config';\r\nconst verifyToken = async (req, res, next) => {\r\n    if (!req.headers.token) {\r\n        return res.status(401).json({ \"success\": false, \"error\": \"Unauthorized user\" })\r\n    }\r\n    const token = req.headers.token\r\n    if (token === 'null') {\r\n        return res.status(401).json({ \"status\": \"token error\", \"error\": \"Token is required\" })\r\n    }\r\n    jwt.verify(token, process.env.MY_SECRET, (err, decoded) => {\r\n        if (err) {\r\n            return res.status(401).json({ \"status\": \"token error\", \"error\": \"Unauthorized request\" })\r\n        }\r\n        req.userId = decoded.id\r\n        console.log(req.userId)\r\n    })\r\n    next()\r\n}\r\n\r\n//to store images in a folder in node js\r\nconst storage = multer.diskStorage({\r\n    destination: (req, file, cb) => {\r\n        cb(null, 'images');\r\n    },\r\n    filename: (req, file, cb) => {\r\n        cb(null, `${Date.now()}_${file.originalname}`);\r\n    }\r\n});\r\n\r\nconst fileFilter = (req, file, cb) => {\r\n    if (file.mimetype == 'image/jpeg' || file.mimetype == 'image/png' || file.mimetype == 'video/mpeg' || file.mimetype == 'video/3gpp' || file.mimetype == 'video/x-msvideo') {\r\n        cb(null, true);\r\n    } else {\r\n        cb(null, false);\r\n    }\r\n}\r\nconst upload = multer({ storage: storage, fileFilter: fileFilter });\r\n\r\nmodule.exports = {verifyToken, upload}"],"file":"dependencies.js"}